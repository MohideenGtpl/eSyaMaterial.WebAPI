using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using eSyaMaterial.DO;
using eSyaMaterial.IF;

namespace eSyaMaterial.WebAPI.Controllers
{
    [Route("api/[controller]/[action]")]
    [ApiController]
    public class CommonController : ControllerBase
    {
        private readonly ICommonRepository _commonRepository;
        public CommonController(ICommonRepository commonRepository)
        {
            _commonRepository = commonRepository;
        }

        /// <summary>
        /// Getting  Application Codes.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetApplicationCodesByCodeType(int codeType)
        {
            var ds = await _commonRepository.GetApplicationCodesByCodeType(codeType);
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Application Codes.
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> GetApplicationCodesByCodeTypeList(List<int> l_codeType)
        {
            var ds = await _commonRepository.GetApplicationCodesByCodeTypeList(l_codeType);
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Item Group.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetItemGroup()
        {
            var ds = await _commonRepository.GetItemGroup();
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Item Category.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetItemCategory(int ItemGroup)
        {
            var ds = await _commonRepository.GetItemCategory(ItemGroup);
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Item Sub Category.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetItemSubCategory(int ItemCategory)
        {
            var ds = await _commonRepository.GetItemSubCategory(ItemCategory);
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Item Category.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetItemCategoryForItemGroup(int ItemGroup)
        {
            var ds = await _commonRepository.GetItemCategoryForItemGroup(ItemGroup);
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Unit of Measure.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetUnitofMeasure()
        {
            var ds = await _commonRepository.GetUnitofMeasure();
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Business Key.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetBusinessKey()
        {
            var ds = await _commonRepository.GetBusinessKey();
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Accounting Store List.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetAccountingStore()
        {
            var ds = await _commonRepository.GetAccountingStore();
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Custodian Store List.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetCustodianStore()
        {
            var ds = await _commonRepository.GetCustodianStore();
            return Ok(ds);
        }

        /// <summary>
        /// Getting  Store List By BusinessKey.
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetStoreListByBusinessKey(int BusinessKey)
        {
            var ds = await _commonRepository.GetStoreListByBusinessKey(BusinessKey);
            return Ok(ds);
        }
    }
}